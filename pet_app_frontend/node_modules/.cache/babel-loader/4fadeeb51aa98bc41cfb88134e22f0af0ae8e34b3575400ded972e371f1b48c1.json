{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\panch\\\\petAppStuff\\\\pet_app_frontend\\\\src\\\\components\\\\PetForm.js\",\n  _s = $RefreshSig$();\n// src/components/PetForm.js\nimport React, { useState } from 'react';\nimport petService from '../services/petService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PetForm = ({\n  pet,\n  onSave\n}) => {\n  _s();\n  const [name, setName] = useState(pet ? pet.name : '');\n  const [breed, setBreed] = useState(pet ? pet.breed : '');\n  const [age, setAge] = useState(pet ? pet.age : '');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const petData = {\n      name,\n      breed,\n      age\n    };\n    if (pet) {\n      await petService.updatePet(pet.id, petData);\n      alert('Pet updated!');\n    } else {\n      await petService.createPet(petData);\n      alert('Pet created!');\n    }\n    onSave();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Breed\",\n      value: breed,\n      onChange: e => setBreed(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Age\",\n      value: age,\n      onChange: e => setAge(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: [pet ? 'Update' : 'Add', \" Pet\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(PetForm, \"fy3IrEDpoZB2b/hU4r9jxYHNsTY=\");\n_c = PetForm;\nexport default PetForm;\nvar _c;\n$RefreshReg$(_c, \"PetForm\");","map":{"version":3,"names":["React","useState","petService","jsxDEV","_jsxDEV","PetForm","pet","onSave","_s","name","setName","breed","setBreed","age","setAge","handleSubmit","e","preventDefault","petData","updatePet","id","alert","createPet","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/panch/petAppStuff/pet_app_frontend/src/components/PetForm.js"],"sourcesContent":["// src/components/PetForm.js\r\nimport React, { useState } from 'react';\r\nimport petService from '../services/petService';\r\n\r\nconst PetForm = ({ pet, onSave }) => {\r\n    const [name, setName] = useState(pet ? pet.name : '');\r\n    const [breed, setBreed] = useState(pet ? pet.breed : '');\r\n    const [age, setAge] = useState(pet ? pet.age : '');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const petData = { name, breed, age };\r\n\r\n        if (pet) {\r\n            await petService.updatePet(pet.id, petData);\r\n            alert('Pet updated!');\r\n        } else {\r\n            await petService.createPet(petData);\r\n            alert('Pet created!');\r\n        }\r\n        onSave();\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"Breed\" value={breed} onChange={(e) => setBreed(e.target.value)} />\r\n            <input type=\"number\" placeholder=\"Age\" value={age} onChange={(e) => setAge(e.target.value)} />\r\n            <button type=\"submit\">{pet ? 'Update' : 'Add'} Pet</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default PetForm;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAGA,CAAC;EAAEC,GAAG;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACK,GAAG,GAAGA,GAAG,CAACG,IAAI,GAAG,EAAE,CAAC;EACrD,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACK,GAAG,GAAGA,GAAG,CAACK,KAAK,GAAG,EAAE,CAAC;EACxD,MAAM,CAACE,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAACK,GAAG,GAAGA,GAAG,CAACO,GAAG,GAAG,EAAE,CAAC;EAElD,MAAME,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,OAAO,GAAG;MAAET,IAAI;MAAEE,KAAK;MAAEE;IAAI,CAAC;IAEpC,IAAIP,GAAG,EAAE;MACL,MAAMJ,UAAU,CAACiB,SAAS,CAACb,GAAG,CAACc,EAAE,EAAEF,OAAO,CAAC;MAC3CG,KAAK,CAAC,cAAc,CAAC;IACzB,CAAC,MAAM;MACH,MAAMnB,UAAU,CAACoB,SAAS,CAACJ,OAAO,CAAC;MACnCG,KAAK,CAAC,cAAc,CAAC;IACzB;IACAd,MAAM,CAAC,CAAC;EACZ,CAAC;EAED,oBACIH,OAAA;IAAMmB,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBACzBpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,MAAM;MAACC,KAAK,EAAElB,IAAK;MAACmB,QAAQ,EAAGZ,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACa,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/F7B,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,OAAO;MAACC,KAAK,EAAEhB,KAAM;MAACiB,QAAQ,EAAGZ,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACa,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClG7B,OAAA;MAAOqB,IAAI,EAAC,QAAQ;MAACC,WAAW,EAAC,KAAK;MAACC,KAAK,EAAEd,GAAI;MAACe,QAAQ,EAAGZ,CAAC,IAAKF,MAAM,CAACE,CAAC,CAACa,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9F7B,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAD,QAAA,GAAElB,GAAG,GAAG,QAAQ,GAAG,KAAK,EAAC,MAAI;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEf,CAAC;AAACzB,EAAA,CA3BIH,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA6Bb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}